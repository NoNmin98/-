{"diagram":{"image":{"x":0,"width":200,"y":0,"pngdata":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAsUlEQVR4nO3BAQEAAACCIP+vbkhAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8GXHmAAFMgHIEAAAAAElFTkSuQmCC","height":200},"elements":{"leftChildren":[{"parent":"root","children":[],"id":"cf82bcba24d1","title":"*mysql存储引擎<br>"},{"parent":"root","children":[{"parent":"7d2c382f8f0f","image":{"w":694,"h":537,"url":"https://cdn2.processon.com/63d927a9e4b00bddabec4524?e=1675179450&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:PbABQRc4tG_oB3nm7vqwUJpKCtM=","direction":"up"},"children":[],"id":"dbf5a67f487c","title":""}],"id":"7d2c382f8f0f","title":"sql语句的执行过程"},{"parent":"root","children":[{"parent":"be5a2fc0f3b8","children":[],"id":"c6d284c90480","title":"大部分的数据库引擎都是使用B树或者B+树来存储数据，多录平衡树相对于普通二叉树更矮。<br>数据库数据都是存在磁盘中，IO成本非常高，通过B树来减少磁盘读写次数提升数据读写效率<br>"},{"parent":"be5a2fc0f3b8","children":[{"parent":"6ce437061faa","children":[],"id":"ed048d9de4a4","title":"B树所有节点都存放键值对，B+树只有叶子结点存放键值对，其他节点只存放键<br>"}],"id":"6ce437061faa","title":"区别"},{"parent":"be5a2fc0f3b8","children":[{"parent":"b8c8db5e80ca","children":[],"id":"aabc0c54a555","title":"读取数据通过页来读取，B+树一页可以读取更多的内容，查询速度更快<br>"},{"parent":"b8c8db5e80ca","children":[],"id":"456f3e9c05dd","title":"B+树查询的速度更稳定，因为所有数据都是通过叶子节点获取的"},{"parent":"b8c8db5e80ca","children":[],"id":"36d5c67a4a93","title":"B+树范围查找更加方便，因为叶子结点的结构为双向链表。B树需要中序遍历获取所有节点<br>"},{"parent":"b8c8db5e80ca","children":[],"id":"935bff7898a2","title":"全局扫描能力更强"},{"parent":"b8c8db5e80ca","children":[],"id":"f0b345dcbb15","title":"使用B+树结构如果使用自增的整形数据作为主键，可以避免数据增加时的叶子节点分裂导致的运算<br>"}],"id":"b8c8db5e80ca","title":"B+树的优势<br>"}],"id":"be5a2fc0f3b8","title":"B树&amp;B+树<br>"},{"parent":"root","children":[],"id":"f8639d5afaff","title":"红黑树"},{"parent":"root","children":[{"parent":"1c505b1fd0b8","children":[],"id":"67664e30fd1a","title":"第一范式：列保持原子性<br>"},{"parent":"1c505b1fd0b8","children":[],"id":"e3170c13455a","title":"第二范式：每列和主键都相关<br>"},{"parent":"1c505b1fd0b8","children":[],"id":"4b8ade3c9f52","title":"第三范式：每列都和主键直接相关<br>"}],"id":"1c505b1fd0b8","title":"数据库三范式"},{"parent":"root","children":[{"parent":"9a38f05a9bef","children":[],"id":"0c05bb64e3e0","title":"多版本并发控制：通过类似快照的方式将数据保存下来，这样读写就不会冲突，不同的事务session就会看到自己特定版本的数据。<br>"},{"parent":"9a38f05a9bef","children":[],"id":"b358258c5948","title":"只在读已提交，可重复度"}],"id":"9a38f05a9bef","title":"MVCC"},{"parent":"root","children":[{"parent":"c728daca049d","children":[],"id":"67a80caa5a58","title":"buffer pool"},{"parent":"c728daca049d","children":[],"id":"9227ebad941c","title":"redolog存入logbuffer"},{"parent":"c728daca049d","children":[],"id":"35f96d3317f6","title":"生成undolog"}],"id":"c728daca049d","title":"如何实现事务"},{"parent":"root","children":[{"parent":"5c807eb77b09","children":[],"id":"9a10fccf2774","title":"UUID：简单，快，不依赖三方，但是没有业务意义，存在风险<br>"},{"parent":"5c807eb77b09","children":[],"id":"f2bb00017887","title":"数据库主键"},{"parent":"5c807eb77b09","children":[],"id":"9d783ff6397d","title":"redis等中间件"},{"parent":"5c807eb77b09","children":[],"id":"921328be8bb3","title":"雪花算法"}],"id":"5c807eb77b09","title":"存储拆分后如何解决主键问题"},{"parent":"root","children":[{"parent":"dc066a52d18a","children":[{"parent":"cd8be5f9347b","children":[],"id":"f1220303b3f3","title":"使用布隆过滤器过滤不存在的记录"},{"parent":"cd8be5f9347b","children":[],"id":"b1754300bfd2","title":"使用bitmap来实现布隆过滤器"},{"parent":"cd8be5f9347b","children":[],"id":"4bff4f8417b9","title":"redis中建立缓存<br>"}],"id":"cd8be5f9347b","title":"redis"}],"id":"dc066a52d18a","title":"海量数据如何查找一个记录"}],"children":[{"parent":"root","children":[{"parent":"88b1ab8ee545","children":[{"parent":"d71216cc57bc","children":[],"id":"840dfa737277","title":"实现事务持久性，当mysql服务器意外崩溃或者宕机后，保证已经提交的事务，确定持久化到磁盘中的一种措施。<br>"}],"id":"d71216cc57bc","title":"redolog"},{"parent":"88b1ab8ee545","children":[{"parent":"c22043e3cab0","children":[{"parent":"83bdcbc2e0a0","children":[],"id":"c60181eddde7","title":"记录所有DDL和DML语句<br>"},{"parent":"83bdcbc2e0a0","children":[{"parent":"e58a575b4597","children":[],"id":"43ce47b26a89","title":"主从复制"},{"parent":"e58a575b4597","children":[],"id":"b66b5d192f3c","title":"数据恢复"}],"id":"e58a575b4597","title":"用途"}],"id":"83bdcbc2e0a0","title":"二进制日志"}],"id":"c22043e3cab0","title":"binlog"},{"parent":"88b1ab8ee545","children":[{"parent":"5fc33a4a7870","children":[],"id":"d892205a3cff","title":"用于回滚操作"}],"id":"5fc33a4a7870","title":"undolog"}],"collapsed":false,"id":"88b1ab8ee545","title":"log"},{"parent":"root","children":[{"parent":"05ad3f22a282","children":[{"parent":"df1c841d6d14","children":[],"id":"6a4c1aaee034","title":"开销小，加锁快；不会出现死锁；锁定粒度大，发生锁冲突的概率最高，并发度最低。"}],"id":"df1c841d6d14","title":"表锁"},{"parent":"05ad3f22a282","children":[{"parent":"ddc6e4febf7c","children":[],"id":"e8e8edfcf66a","title":"开销大，加锁慢；会出现死锁；锁定粒度最小，发生锁冲突的概率最低，并发度也最高。"},{"parent":"ddc6e4febf7c","children":[{"parent":"1c5a40418f61","children":[],"id":"cb80b0de7f56","title":"读锁，允许读，允许加共享锁，但是不允许添加其他锁和修改。"}],"id":"1c5a40418f61","title":"共享锁"},{"parent":"ddc6e4febf7c","children":[{"parent":"3cac2b75ce74","children":[],"id":"e51c5ca70966","title":"阻止其他锁"}],"id":"3cac2b75ce74","title":"排它锁"},{"parent":"ddc6e4febf7c","children":[{"parent":"0cf5fc877db6","children":[],"id":"745461b98e6a","title":"对于自增字段，回滚后，自增序列不回滚"}],"id":"0cf5fc877db6","title":"自增锁"},{"parent":"ddc6e4febf7c","children":[{"parent":"0ba5439eb802","children":[],"id":"24702f68d50e","title":"当使用范围条件查找时，针对不存在但是在范围内的记录，也会加锁。"}],"id":"0ba5439eb802","title":"间隙锁"}],"id":"ddc6e4febf7c","title":"行锁"},{"parent":"05ad3f22a282","children":[{"parent":"ba27af79e557","children":[],"id":"1e005819a669","title":"开销和加锁时间界于表锁和行锁之间；会出现死锁；锁定粒度界于表锁和行锁之间，并发度一般"}],"id":"ba27af79e557","title":"页锁"}],"id":"05ad3f22a282","title":"锁"},{"parent":"root","children":[{"parent":"72e011478f4f","children":[],"id":"8f589074b0fb","title":"参考文章：https://blog.csdn.net/guorui_java/article/details/118558095<br>"},{"parent":"72e011478f4f","children":[{"parent":"17d3ebeacbbc","children":[],"id":"9190b6f8b7c9","title":"最左匹配原则，联合索引找右边就会不使用索引"},{"parent":"17d3ebeacbbc","children":[],"id":"47eb54cd65ba","title":"频繁查找的创建索引，频繁更新的不创建索引"},{"parent":"17d3ebeacbbc","children":[],"id":"1ba7e0ce285f","title":"提升查找效率，降低IO的使用，但是会降低CUDR效率<br>"},{"parent":"17d3ebeacbbc","children":[],"id":"39bdbe2db40f","title":"索引本身很大，通常存储在硬盘中。"},{"parent":"17d3ebeacbbc","children":[],"id":"d00ec71bdb88","title":"区分度太低的不适合使用索引"},{"parent":"17d3ebeacbbc","children":[],"id":"2aa89a4354b2","title":"尽量扩展索引，减少新建索引"}],"id":"17d3ebeacbbc","title":"创建原则"},{"parent":"72e011478f4f","children":[{"parent":"2989b7ac0925","children":[{"parent":"01eed0ae60b2","children":[{"parent":"609fabf50f00","children":[],"id":"ae064492f5e6","title":"查看每个select子句的类型"}],"id":"609fabf50f00","title":"selectType"},{"parent":"01eed0ae60b2","children":[{"parent":"f9a8ddc2bca9","children":[{"parent":"859e8ebebe59","image":{"w":729,"h":230,"url":"https://cdn2.processon.com/63d9e148e4b0c73fd28339a7?e=1675226968&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:FgpEd-DJbQmZ-dWkanzA3XIPIk0=","direction":"up"},"children":[],"id":"23a58f48d1fb","title":""}],"id":"859e8ebebe59","title":"判断sql性能的指标，了解索引命中情况"}],"id":"f9a8ddc2bca9","title":"type"}],"id":"01eed0ae60b2","title":"explain"}],"id":"2989b7ac0925","title":"sql语句分析"},{"parent":"72e011478f4f","children":[],"id":"4388ab82edb0","title":"聚簇索引&amp;非聚簇索引<br>"},{"parent":"72e011478f4f","children":[{"parent":"e79dd91fd75a","children":[],"id":"8cfd24bb585d","title":"最左匹配原则"},{"parent":"e79dd91fd75a","children":[],"id":"52c483eafc53","title":"索引没有全表扫描快"},{"parent":"e79dd91fd75a","children":[],"id":"01103c98eaa0","title":"隐式类型转换"},{"parent":"e79dd91fd75a","children":[],"id":"3bbfb04b78cd","title":"模糊匹配，例如%，计算，不等于<br>"}],"id":"e79dd91fd75a","title":"索引失效"},{"parent":"72e011478f4f","children":[{"parent":"b8914f2e8ceb","children":[],"id":"d10348cf6cea","title":"如果索引内已经找到所有要找的内容，那么就不需要回表去操作"}],"id":"b8914f2e8ceb","title":"索引覆盖"}],"id":"72e011478f4f","title":"索引"},{"parent":"root","children":[{"parent":"08d97cb41510","children":[],"id":"2668d0dd5092","title":"避免多次锁定"},{"parent":"08d97cb41510","children":[],"id":"cd0d54bfcc4e","title":"使用功能相同的加锁顺序，如果多个线程需要对多个&nbsp;Lock&nbsp;进行锁定，则应该保证它们以相同的顺序请求加锁。"},{"parent":"08d97cb41510","children":[],"id":"2962ca3a45c7","title":"使用定时的锁"},{"parent":"08d97cb41510","children":[],"id":"716d73ba7dfc","title":"死锁检测"},{"parent":"08d97cb41510","children":[],"id":"86742cd9854e","title":"鸵鸟策略"}],"id":"08d97cb41510","title":"死锁的解决"},{"parent":"root","children":[{"parent":"6603baa961fd","children":[{"parent":"7f6ad1de182d","children":[],"id":"3e63435d06c0","title":"通过建立一个写主库，多个读从库，来完成分离"}],"id":"7f6ad1de182d","title":"读写分离"},{"parent":"6603baa961fd","children":[{"parent":"0eb1c011b0b9","children":[],"id":"3e9e208cb182","title":"使用binlog来完成主从复制。从库将binlog拷贝到本地然后执行binlog中的内容"},{"parent":"0eb1c011b0b9","children":[{"parent":"3eb43c5912ed","children":[{"parent":"a9c638bfec17","children":[],"id":"60872134751e","title":"强制理科将数据同步到从库，完成后返回ack确认，主库才认定写操作完成"}],"id":"a9c638bfec17","title":"半同步机制"},{"parent":"3eb43c5912ed","children":[{"parent":"2497798aee57","children":[],"id":"2aa07e05ef8f","title":"加快复制速度"}],"id":"2497798aee57","title":"并行复制"}],"id":"3eb43c5912ed","title":"如何保证数据一致"}],"id":"0eb1c011b0b9","title":"主从复制"}],"id":"6603baa961fd","title":"读写分离&amp;主从复制和同步<br>"},{"parent":"root","children":[{"parent":"2aee912ef0d1","children":[],"id":"5e7cde296dbf","title":"A通过undolog，Dredolog保证，I通过MVCC保证<br>"}],"id":"2aee912ef0d1","title":"ACID如何保证"},{"parent":"root","children":[{"parent":"b0d2eff992ae","children":[],"id":"b3ccbf4fabd0","title":"是否使用了索引，是否使用了最优的索引"},{"parent":"b0d2eff992ae","children":[],"id":"551e1411aa39","title":"查询字段是否是最优的，是否有多余数据"},{"parent":"b0d2eff992ae","children":[],"id":"5591f9d600f4","title":"是否表中数据过多，是否需要分表"},{"parent":"b0d2eff992ae","children":[],"id":"8660fda11ce2","title":"硬件性能是否需要提升"}],"id":"b0d2eff992ae","title":"慢查询优化"}],"root":true,"theme":"shangwu3","id":"root","title":"mysql高频面试题<br>","version":283,"structure":"mind_free"}},"meta":{"exportTime":"2023-02-01 15:38:26","member":"","diagramInfo":{"creator":"","created":"","modified":"","title":"","category":""},"id":"","type":"ProcessOn Schema File","version":"1.0"}}